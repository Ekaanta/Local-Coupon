{"name": "Smoke Test - Form Accessibility", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: value must be a string or regular expression", "trace": "@allure.epic(\"Business Owner Management\")\n    @allure.feature(\"Smoke Test\")\n    @allure.story(\"Quick Validation\")\n    @allure.title(\"Smoke Test - Form Accessibility\")\n    @allure.description(\"Quick test to verify the form is accessible and functional\")\n    def test_form_smoke_test():\n        \"\"\"\n        Quick smoke test to verify form is accessible\n        \"\"\"\n        with sync_playwright() as p:\n            browser = p.chromium.launch(headless=True)  # Headless for speed\n            page = browser.new_page()\n    \n            try:\n                with allure.step(\"Verify page loads\"):\n                    page.goto(\"https://dashboard.impactoapps.com/business-owners\")\n>                   expect(page).to_have_title(lambda title: len(title) > 0)\n\ntest_nm.py:307: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitems = [<function test_form_smoke_test.<locals>.<lambda> at 0x0000013F4CF1E020>], match_substring = False, normalize_white_space = True, ignoreCase = None\n\n    def to_expected_text_values(\n        items: Union[\n            Sequence[Pattern[str]], Sequence[str], Sequence[Union[str, Pattern[str]]]\n        ],\n        match_substring: bool = False,\n        normalize_white_space: bool = False,\n        ignoreCase: Optional[bool] = None,\n    ) -> Sequence[ExpectedTextValue]:\n        out: List[ExpectedTextValue] = []\n        assert isinstance(items, (list, tuple))\n        for item in items:\n            if isinstance(item, str):\n                o = ExpectedTextValue(\n                    string=item,\n                    matchSubstring=match_substring,\n                    normalizeWhiteSpace=normalize_white_space,\n                    ignoreCase=ignoreCase,\n                )\n                if o[\"ignoreCase\"] is None:\n                    del o[\"ignoreCase\"]\n                out.append(o)\n            elif isinstance(item, Pattern):\n                out.append(\n                    expected_regex(item, match_substring, normalize_white_space, ignoreCase)\n                )\n            else:\n>               raise Error(\"value must be a string or regular expression\")\nE               playwright._impl._errors.Error: value must be a string or regular expression\n\n..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_assertions.py:973: Error"}, "description": "Quick test to verify the form is accessible and functional", "steps": [{"name": "Verify page loads", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.Error: value must be a string or regular expression\n", "trace": "  File \"C:\\Users\\Ekanta Banik Durjoy\\Desh\\test_nm.py\", line 307, in test_form_smoke_test\n    expect(page).to_have_title(lambda title: len(title) > 0)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\Ekanta Banik Durjoy\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py\", line 18959, in to_have_title\n    self._sync(\n    ~~~~~~~~~~^\n        self._impl_obj.to_have_title(\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n            titleOrRegExp=title_or_reg_exp, timeout=timeout\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n        )\n        ^\n    )\n    ^\n  File \"C:\\Users\\Ekanta Banik Durjoy\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_sync_base.py\", line 115, in _sync\n    return task.result()\n           ~~~~~~~~~~~^^\n  File \"C:\\Users\\Ekanta Banik Durjoy\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 100, in to_have_title\n    expected_values = to_expected_text_values(\n        [titleOrRegExp], normalize_white_space=True\n    )\n  File \"C:\\Users\\Ekanta Banik Durjoy\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_assertions.py\", line 973, in to_expected_text_values\n    raise Error(\"value must be a string or regular expression\")\n"}, "start": 1749020435616, "stop": 1749020440996}], "start": 1749020432145, "stop": 1749020441047, "uuid": "677614db-a076-4101-9f88-7ef055941443", "historyId": "e2dd979c2bc1421335c99b250a01f1a1", "testCaseId": "e2dd979c2bc1421335c99b250a01f1a1", "fullName": "test_nm#test_form_smoke_test", "labels": [{"name": "feature", "value": "Smoke Test"}, {"name": "epic", "value": "Business Owner Management"}, {"name": "story", "value": "Quick Validation"}, {"name": "suite", "value": "test_nm"}, {"name": "host", "value": "DESKTOP-VKIO4T7"}, {"name": "thread", "value": "22428-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_nm"}]}