{"name": "Test Add Business Owner", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Page.wait_for_selector: Target page, context or browser has been closed\nCall log:\n  - waiting for locator(\"#gender_list\") to be visible\n    23 × locator resolved to hidden <div role=\"listbox\" id=\"gender_list\">…</div>", "trace": "@allure.title(\"Test Add Business Owner\")\n    def test_add_business_owner():\n        with sync_playwright() as p:\n            browser = p.chromium.launch(headless=False)\n            page = browser.new_page()\n    \n            page.goto(\"https://dashboard.impactoapps.com/business-owners\")\n    \n            print(\"Clicking 'Add Business Owner' button...\")\n            page.click(\"button:has-text('Add Business Owner')\")\n            page.wait_for_timeout(1000)  # wait for modal animation\n    \n            try:\n                page.wait_for_selector(\"h5:has-text('Add Business Owner')\", timeout=5000)\n            except:\n                page.wait_for_selector(\"text=Add Business Owner\", timeout=5000)\n            print(\"Modal appeared!\")\n    \n            page.fill(\"#name\", \"Automation User\")\n            page.fill(\"#email\", generate_random_email())\n            page.fill(\"#countryDialCode\", \"+880\")\n            page.fill(\"#phone\", \"01712345678\")\n            page.fill(\"#dateOfBirth\", \"1990-01-01\")\n    \n            page.click(\"#gender\")  # open dropdown\n>           page.wait_for_selector(\"#gender_list\")  # wait for options container\n\ntest_nm.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:8187: in wait_for_selector\n    self._sync(\n..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_page.py:425: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x000002C049DC1E80>, cb = <function Channel.send.<locals>.<lambda> at 0x000002C049E98180>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Page.wait_for_selector: Target page, context or browser has been closed\nE           Call log:\nE             - waiting for locator(\"#gender_list\") to be visible\nE               23 × locator resolved to hidden <div role=\"listbox\" id=\"gender_list\">…</div>\n\n..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\playwright\\_impl\\_connection.py:528: TargetClosedError"}, "attachments": [{"name": "stdout", "source": "f9147a8f-68f2-4a10-a571-112209c20636-attachment.txt", "type": "text/plain"}], "start": 1748923535078, "stop": 1748923554777, "uuid": "7b1db02c-ad7a-4824-9321-3711fdad6dde", "historyId": "c14d723a995d644cd63448c427b6928f", "testCaseId": "c14d723a995d644cd63448c427b6928f", "fullName": "test_nm#test_add_business_owner", "labels": [{"name": "suite", "value": "test_nm"}, {"name": "host", "value": "DESKTOP-VKIO4T7"}, {"name": "thread", "value": "9444-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_nm"}]}