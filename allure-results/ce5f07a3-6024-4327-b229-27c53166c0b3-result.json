{"name": " CREATE NEW BUSINESS OWNER - FULL WORKFLOW", "status": "broken", "statusDetails": {"message": "KeyError: 'location'", "trace": "@allure.epic(\"Business Owner Management\")\n    @allure.feature(\"Add Business Owner\")\n    @allure.story(\"Create New Business Owner with Authentication\")\n    @allure.title(\" CREATE NEW BUSINESS OWNER - FULL WORKFLOW\")\n    @allure.description(\"Complete test that logs in and creates a new business owner with all required fields\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_create_business_owner_with_login():\n        \"\"\"\n        MAIN TEST: Login and create a new business owner\n        \"\"\"\n    \n        with sync_playwright() as p:\n            # Launch browser with visible mode for debugging\n            browser = p.chromium.launch(headless=False, slow_mo=800)\n            page = browser.new_page()\n            page.set_viewport_size({\"width\": 1920, \"height\": 1080})\n    \n            try:\n                # Step 1: Login to the dashboard\n                login_to_dashboard(page)\n    \n                # Step 2: Navigate to Business Owners page\n                with allure.step(\" Navigate to Business Owners\"):\n                    page.goto(URLS[\"business_owners\"], timeout=30000)\n                    page.wait_for_load_state(\"networkidle\")\n                    allure.attach(page.screenshot(), name=\" Business Owners Page\", attachment_type=allure.attachment_type.PNG)\n                    print(\" Successfully navigated to Business Owners page\")\n    \n                # Step 3: Click Add Business Owner button\n                with allure.step(\" Open Add Business Owner Form\"):\n                    add_button = page.locator(\"button:has-text('Add Business Owner'), button:has-text('Add')\")\n                    if add_button.count() > 0:\n                        add_button.first.click()\n                    else:\n                        # Try alternative selectors\n                        page.locator(\"[data-testid*='add'], .add-button, button[class*='add']\").first.click()\n    \n                    page.wait_for_timeout(3000)\n    \n                    # Wait for modal to appear\n                    modal_selectors = [\n                        \"text=Add Business Owner\",\n                        \".ant-modal\",\n                        \"[role='dialog']\",\n                        \".modal\"\n                    ]\n    \n                    modal_found = False\n                    for selector in modal_selectors:\n                        try:\n                            page.wait_for_selector(selector, timeout=5000)\n                            modal_found = True\n                            break\n                        except:\n                            continue\n    \n                    if not modal_found:\n                        allure.attach(page.screenshot(), name=\" No Modal Found\", attachment_type=allure.attachment_type.PNG)\n                        raise Exception(\"Add Business Owner modal did not appear\")\n    \n                    allure.attach(page.screenshot(), name=\" Add Business Owner Modal\", attachment_type=allure.attachment_type.PNG)\n                    print(\" Add Business Owner modal opened\")\n    \n                # Step 4: Generate test data\n                current_time = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n                test_email = generate_random_email()\n                test_phone = generate_random_phone()\n    \n                test_data = {\n                    \"name\": f\"TestUser_{current_time}\",\n                    \"email\": test_email,\n                    \"countryDialCode\": \"+880\",\n                    \"phone\": test_phone,\n                    \"dateOfBirth\": \"1990-01-01\",\n                    \"gene\"\n                    \"location\": \"Dhaka, Bangladesh\",\n                    \"password\": \"TestPass123!\",\n                    \"companyAddress\": f\"123 Test Street, Dhaka-{current_time}\",\n                    \"companyName\": f\"TestCompany_{current_time}\",\n                    \"free_downloads\": \"20\",\n                    \"free_uploads\": \"30\"\n                }\n    \n                # Log test data\n                test_data_text = \" GENERATED TEST DATA:\\n\" + \"\\n\".join([f\"  â€¢ {k}: {v}\" for k, v in test_data.items()])\n                allure.attach(test_data_text, name=\" Test Data\", attachment_type=allure.attachment_type.TEXT)\n                print(f\" Generated test data for: {test_data['name']}\")\n    \n                # Step 5: Fill form fields\n                with allure.step(\" Fill Basic Information\"):\n                    # Fill basic fields with error handling\n                    fields_to_fill = [\n                        (\"name\", test_data[\"name\"]),\n                        (\"email\", test_data[\"email\"]),\n                        (\"countryDialCode\", test_data[\"countryDialCode\"]),\n                        (\"phone\", test_data[\"phone\"]),\n                        (\"dateOfBirth\", test_data[\"dateOfBirth\"])\n                    ]\n    \n                    for field_id, value in fields_to_fill:\n                        try:\n                            field_selector = f\"#{field_id}\"\n                            if page.locator(field_selector).count() > 0:\n                                page.fill(field_selector, value)\n                                page.wait_for_timeout(500)\n                                print(f\" Filled {field_id}: {value}\")\n                            else:\n                                print(f\"Field {field_id} not found\")\n                        except Exception as e:\n                            print(f\" Error filling {field_id}: {e}\")\n    \n                    allure.attach(page.screenshot(), name=\" Basic Info Filled\", attachment_type=allure.attachment_type.PNG)\n    \n                with allure.step(\" Select Gender\"):\n                    try:\n                        # Multiple strategies to find and select gender field\n                        gender_selectors = [\n                            \"#gender\",\n                            \"[name='gender']\",\n                            \"select[id*='gender']\",\n                           # \".ant-select:has([placeholder*='gender' i])\",\n                         #  \".ant-select:has([placeholder*='Gender'])\",\n                          #  \"div:has(label:text('Gender')) .ant-select\",\n                          #  \"[data-testid*='gender']\"\n                        ]\n    \n                        gender_field = None\n                        for selector in gender_selectors:\n                            if page.locator(selector).count() > 0:\n                                gender_field = page.locator(selector).first\n                                print(f\"Found gender field using: {selector}\")\n                                break\n    \n                        if gender_field:\n                            # Click to open dropdown\n                            gender_field.click()\n                            page.wait_for_timeout(150)\n    \n                            # Take screenshot of opened dropdown\n                            allure.attach(page.screenshot(), name=\" Gender Dropdown Opened\", attachment_type=allure.attachment_type.PNG)\n    \n                            # Multiple strategies to select gender option\n                            gender_selected = False\n    \n                            # Strategy 1: Look for specific gender options\n                            gender_option_selectors = [\n                                '[role=\"option\"]:has-text(\"Male\")',\n                               # '[role=\"option\"]:has-text(\"Female\")',\n                                'option:has-text(\"Male\")',\n                               # 'option:has-text(\"Female\")',\n                                '.ant-select-item:has-text(\"Male\")',\n                                #'.ant-select-item:has-text(\"Female\")',\n                                'li:has-text(\"Male\")',\n                               # 'li:has-text(\"Female\")'\n                            ]\n    \n                            for selector in gender_option_selectors:\n                                try:\n                                    options = page.locator(selector)\n                                    if options.count() > 0:\n                                        options.first.click()\n                                        gender_selected = True\n                                        selected_text = options.first.text_content()\n                                        print(f\" Selected gender: {selected_text}\")\n                                        break\n                                except:\n                                    continue\n    \n                            # Strategy 2: Select first available option\n                            if not gender_selected:\n                                option_selectors = [\n                                    '[role=\"option\"]',\n                                    '.ant-select-item',\n                                    '.ant-select-item-option',\n                                    'option',\n                                    'li[data-value]'\n                                ]\n    \n                                for selector in option_selectors:\n                                    try:\n                                        options = page.locator(selector)\n                                        if options.count() > 0:\n                                            options.first.click()\n                                            gender_selected = True\n                                            print(\" Selected first available gender option\")\n                                            break\n                                    except:\n                                        continue\n    \n                            # Strategy 3: Keyboard navigation\n                            if not gender_selected:\n                                try:\n                                    page.keyboard.press(\"ArrowDown\")\n                                    page.wait_for_timeout(500)\n                                    page.keyboard.press(\"Enter\")\n                                    gender_selected = True\n                                    print(\" Selected gender using keyboard navigation\")\n                                except:\n                                    pass\n    \n                            # Strategy 4: Try clicking on dropdown items\n                            if not gender_selected:\n                                try:\n                                    # Look for any clickable items in dropdown\n                                    dropdown_items = page.locator(\".ant-select-dropdown .ant-select-item, .dropdown-item, [role='listbox'] > *\")\n                                    if dropdown_items.count() > 0:\n                                        dropdown_items.first.click()\n                                        gender_selected = True\n                                        print(\" Selected gender using dropdown item click\")\n                                except:\n                                    pass\n    \n                            page.wait_for_timeout(1000)\n    \n                            if gender_selected:\n                                allure.attach(\"Gender selection successful\", name=\" Gender Selected\", attachment_type=allure.attachment_type.TEXT)\n                            else:\n                                allure.attach(\"Gender selection failed - continuing with test\", name=\" Gender Selection\", attachment_type=allure.attachment_type.TEXT)\n                                print(\" Could not select gender - continuing with test\")\n                        else:\n                            print(\" Gender field not found - might be optional\")\n                            allure.attach(\"Gender field not found\", name=\" Gender Field\", attachment_type=allure.attachment_type.TEXT)\n    \n                    except Exception as e:\n                        print(f\" Gender selection error: {e}\")\n                        allure.attach(f\"Gender selection error: {e}\", name=\" Gender Error\", attachment_type=allure.attachment_type.TEXT)\n    \n                    # Take final screenshot after gender selection attempt\n                    allure.attach(page.screenshot(), name=\" After Gender Selection\", attachment_type=allure.attachment_type.PNG)\n    \n                with allure.step(\" Fill Company Information\"):\n                    company_fields = [\n>                       (\"location\", test_data[\"location\"]),\n                        (\"password\", test_data[\"password\"]),\n                        (\"companyAddress\", test_data[\"companyAddress\"]),\n                        (\"companyName\", test_data[\"companyName\"])\n                    ]\nE                   KeyError: 'location'\n\ntest_nm.py:316: KeyError"}, "description": "Complete test that logs in and creates a new business owner with all required fields", "steps": [{"name": " Login to Dashboard", "status": "passed", "attachments": [{"name": " Login Page", "source": "b809c2c2-0d39-413c-bf9f-b30d120d3d0d-attachment.png", "type": "image/png"}, {"name": " Credentials Filled", "source": "337e04be-c6ca-4f25-981e-10d0d776d688-attachment.png", "type": "image/png"}, {"name": " After Login", "source": "f962ca66-b35a-42cd-adda-ff1372a41248-attachment.png", "type": "image/png"}, {"name": " Login Success", "source": "07b55ffd-0ca8-44ff-86d6-a58a2c6b6de9-attachment.txt", "type": "text/plain"}], "start": 1749034128911, "stop": 1749034139276}, {"name": " Navigate to Business Owners", "status": "passed", "attachments": [{"name": " Business Owners Page", "source": "0d2b2b05-1d1d-4948-acfd-82ed7aab98a5-attachment.png", "type": "image/png"}], "start": 1749034139276, "stop": 1749034146350}, {"name": " Open Add Business Owner Form", "status": "passed", "attachments": [{"name": " Add Business Owner Modal", "source": "5f7a1e59-0be2-4178-9310-90800dc52bb3-attachment.png", "type": "image/png"}], "start": 1749034146350, "stop": 1749034150437}, {"name": " Fill Basic Information", "status": "passed", "attachments": [{"name": " Basic Info Filled", "source": "bda17cc4-77cf-427b-ab31-6f46594ded09-attachment.png", "type": "image/png"}], "start": 1749034150438, "stop": 1749034157266}, {"name": " Select Gender", "status": "passed", "attachments": [{"name": " Gender Dropdown Opened", "source": "b25eba2f-49e4-4dfc-8ca3-468db7dfd3bd-attachment.png", "type": "image/png"}, {"name": " Gender Selected", "source": "5ee2968d-f5ed-4db9-8264-2f59296f73fc-attachment.txt", "type": "text/plain"}, {"name": " After Gender Selection", "source": "16c84e81-5b83-4870-8647-d080d5b6d0f0-attachment.png", "type": "image/png"}], "start": 1749034157267, "stop": 1749034191239}, {"name": " Fill Company Information", "status": "broken", "statusDetails": {"message": "KeyError: 'location'\n", "trace": "  File \"C:\\Users\\Ekanta Banik Durjoy\\Desh\\test_nm.py\", line 316, in test_create_business_owner_with_login\n    (\"location\", test_data[\"location\"]),\n                 ~~~~~~~~~^^^^^^^^^^^^\n"}, "start": 1749034191239, "stop": 1749034191239}], "attachments": [{"name": " Test Data", "source": "fe194e97-7aec-449d-bb8c-c1451161b7e2-attachment.txt", "type": "text/plain"}, {"name": " Error Screenshot", "source": "00df1b60-32a5-4499-bdb3-b226c1fd6cb4-attachment.png", "type": "image/png"}, {"name": " Error Details", "source": "8ddb2433-417e-449c-a0da-1a60d9eefaae-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "dec5f236-2eae-4751-a385-dee749cfe581-attachment.txt", "type": "text/plain"}], "start": 1749034128222, "stop": 1749034194592, "uuid": "818734f2-c712-4b92-9aa3-81d109e55c63", "historyId": "8f24f55b029f7bc41df099de60bd2f82", "testCaseId": "8f24f55b029f7bc41df099de60bd2f82", "fullName": "test_nm#test_create_business_owner_with_login", "labels": [{"name": "epic", "value": "Business Owner Management"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "Add Business Owner"}, {"name": "story", "value": "Create New Business Owner with Authentication"}, {"name": "suite", "value": "test_nm"}, {"name": "host", "value": "DESKTOP-VKIO4T7"}, {"name": "thread", "value": "19752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_nm"}]}